import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.tree import export_text
data = {
    "mileage": [50000, 30000, 70000, 45000, 60000],
    "age": [5, 3, 7, 4, 6],
    "brand": [1, 2, 1, 3, 2],  # Encoded brand categories
    "engine_type": [1, 2, 1, 2, 1],  # Encoded engine types (e.g., 1 = petrol, 2 = diesel)
    "price": [8000, 12000, 6000, 10000, 7500]
}
df = pd.DataFrame(data)
X = df[["mileage", "age", "brand", "engine_type"]]
y = df["price"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = DecisionTreeRegressor(random_state=42)
model.fit(X_train, y_train)
mileage = float(input("Enter the car's mileage: "))
age = int(input("Enter the car's age (years): "))
brand = int(input("Enter the car's brand category (numeric encoding): "))
engine_type = int(input("Enter the car's engine type (1 = petrol, 2 = diesel): ")
input_features = np.array([[mileage, age, brand, engine_type]])
predicted_price = model.predict(input_features)[0]
tree_rules = export_text(model, feature_names=["mileage", "age", "brand", "engine_type"])

print(f"\nPredicted Price for the car: ${predicted_price:,.2f}")
print("\nDecision Path for Prediction:")
print(tree_rules)
